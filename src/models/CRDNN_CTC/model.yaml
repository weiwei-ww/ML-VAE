# Seed needs to be set at top of yaml, before objects with parameters are made
seed: 654321
__set_seed: !apply:torch.manual_seed [!ref <seed>]

dataset: !PLACEHOLDER

output_dir: !ref results/<dataset>/<seed>
wer_file: !ref <output_dir>/wer.txt
save_dir: !ref <output_dir>/save
train_log: !ref <output_dir>/train_log.txt

# Data files
prepare:
    dataset_dir: !ref datasets/<dataset>/original_dataset  # e.g. /path/to/dataset
    train_json_path: !ref datasets/<dataset>/annotation/train.json
    valid_json_path: !ref datasets/<dataset>/annotation/valid.json
    test_json_path: !ref datasets/<dataset>/annotation/test.json
    n_phonemes: 39

#test_key: !include:test.yaml
#test_key:
#    test_name: test_yaml

#    open_rir_dir: !ref <prepare[data_dir]> # where to store noisy data for augment (change it if needed)
#    save_json_train: !ref <output_dir>/train.json
#    save_json_valid: !ref <output_dir>/dev.json
#    save_json_test: !ref <output_dir>/test.json

# Training parameters
number_of_epochs: 50
batch_size: 2
lr: 1.0
sorting: descending # choose between ascending, descending and random

# Feature parameters
sample_rate: 16000
n_fft: 400
n_mels: 40

# Model parameters
activation: !name:torch.nn.LeakyReLU
dropout: 0.15
cnn_blocks: 2
cnn_channels: (128, 256)
cnn_kernelsize: (3, 3)
rnn_layers: 4
rnn_neurons: 512
rnn_bidirectional: True
dnn_blocks: 2
dnn_neurons: 512

# Outputs
output_neurons: 41
blank_index: 0
unk_index: 1

# Dataloader options
train_dataloader_opts:
    batch_size: !ref <batch_size>
valid_dataloader_opts:
    batch_size: !ref <batch_size>
test_dataloader_opts:
    batch_size: !ref <batch_size>

normalize: !new:speechbrain.processing.features.InputNormalization
    norm_type: global

augmentation: !new:speechbrain.lobes.augment.TimeDomainSpecAugment
    sample_rate: !ref <sample_rate>
    speeds: [95, 100, 105]

epoch_counter: !new:speechbrain.utils.epoch_loop.EpochCounter
    limit: !ref <number_of_epochs>

compute_features: !new:speechbrain.lobes.features.Fbank
    sample_rate: !ref <sample_rate>
    n_fft: !ref <n_fft>
    n_mels: !ref <n_mels>

model: !new:speechbrain.lobes.models.CRDNN.CRDNN
    input_size: !ref <n_mels>
    activation: !ref <activation>
    dropout: !ref <dropout>
    cnn_blocks: !ref <cnn_blocks>
    cnn_channels: !ref <cnn_channels>
    cnn_kernelsize: !ref <cnn_kernelsize>
    time_pooling: True
    rnn_layers: !ref <rnn_layers>
    rnn_neurons: !ref <rnn_neurons>
    rnn_bidirectional: !ref <rnn_bidirectional>
    dnn_blocks: !ref <dnn_blocks>
    dnn_neurons: !ref <dnn_neurons>

output: !new:speechbrain.nnet.linear.Linear
    input_size: !ref <dnn_neurons>
    n_neurons: !ref <output_neurons>
    bias: True

log_softmax: !new:speechbrain.nnet.activations.Softmax
    apply_log: True

opt_class: !name:torch.optim.Adadelta
    rho: 0.95
    lr: !ref <lr>
    eps: 1.e-8

lr_annealing: !new:speechbrain.nnet.schedulers.NewBobScheduler
    initial_value: !ref <lr>
    improvement_threshold: 0.0025
    annealing_factor: 0.8
    patient: 0

modules:
    model: !ref <model>
    output: !ref <output>
    normalize: !ref <normalize>
#    env_corrupt: !ref <env_corrupt>

jit_module_keys: [model]

checkpointer: !new:speechbrain.utils.checkpoints.Checkpointer
    checkpoints_dir: !ref <save_dir>
    recoverables:
        model: !ref <model>
        output: !ref <output>
        scheduler: !ref <lr_annealing>
        normalizer: !ref <normalize>
        counter: !ref <epoch_counter>

compute_cost: !name:speechbrain.nnet.losses.ctc_loss
    blank_index: !ref <blank_index>

train_logger: !new:speechbrain.utils.train_logger.FileTrainLogger
    save_file: !ref <train_log>

ctc_stats: !name:speechbrain.utils.metric_stats.MetricStats
    metric: !name:speechbrain.nnet.losses.ctc_loss
        blank_index: !ref <blank_index>
        reduction: batch

per_stats: !name:speechbrain.utils.metric_stats.ErrorRateStats
